import React = require('react')

import { TokenCache, TokenRequest, TokenRequestError, IToken } from 'pintra-fx'

export interface IGetTokenButtonProps {
  env: {
    nonce: string
    wpAjaxAdminUrl: string
    props: any
  }
}

export class GetTokenButton extends React.Component<IGetTokenButtonProps, {}> {
  public constructor(props: IGetTokenButtonProps) {
    super(props)

    this.state = {
      items: [],
    }
  }

  public render(): React.ReactElement<IGetTokenButtonProps> {
    return (
      <div>
        <button onClick={() => this.click()}>Get Microsoft Graph Token</button>
      </div>
    )
  }

  private async click() {
    const tokenResponse = await TokenCache.getToken(
      new TokenRequest(
        'graph',
        this.props.env.props.resourceId /* https://graph.microsoft.com */,
      ),
      {
        nonce: this.props.env
          .nonce /* a random value generated by WordPress and injected by Pintra Framework */,
        wpAjaxAdminUrl: this.props.env
          .wpAjaxAdminUrl /* e.g. http://localhost/website/wp-admin/admin-ajax.php */,
      },
    )

    if (tokenResponse instanceof Error) {
      return new Error('Unexpected: Could not retrieve a valid access token.')
    }

    const token = tokenResponse as IToken
    return token.bearer
  }
}
